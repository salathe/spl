digraph "ArrayIterator"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ArrayIterator\n|+ ARRAY_AS_PROPS\l+ STD_PROP_LIST\l|+ __construct()\l+ append()\l+ asort()\l+ count()\l+ current()\l+ getArrayCopy()\l+ getFlags()\l+ key()\l+ ksort()\l+ natcasesort()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SeekableIterator\n||+ seek()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceSeekableIterator.html",tooltip="seekable iterator "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Iterator\n||+ current()\l+ key()\l+ next()\l+ rewind()\l+ valid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceIterator.html",tooltip="Basic iterator. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Traversable\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceTraversable.html",tooltip="Interface to detect a class is traversable using foreach. "];
  Node5 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{ArrayAccess\n||+ offsetExists()\l+ offsetGet()\l+ offsetSet()\l+ offsetUnset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceArrayAccess.html",tooltip="Interface to override array access of objects. "];
  Node6 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Countable\n||+ count()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceCountable.html",tooltip="This Interface allows to hook into the global count() function. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{RecursiveArrayIterator\n|- $ref\l|+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveArrayIterator.html",tooltip="A recursive array iterator. "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{SubClasses\n||+ __construct()\l+ current()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSubClasses.html",tooltip="Collects sub classes for given class or interface. "];
}

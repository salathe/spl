digraph "RecursiveIterator"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{RecursiveIterator\n||+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Iterator\n||+ current()\l+ key()\l+ next()\l+ rewind()\l+ valid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceIterator.html",tooltip="Basic iterator. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Traversable\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceTraversable.html",tooltip="Interface to detect a class is traversable using foreach. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{RecursiveArrayIterator\n|- $ref\l|+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveArrayIterator.html",tooltip="A recursive array iterator. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{SubClasses\n||+ __construct()\l+ current()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSubClasses.html",tooltip="Collects sub classes for given class or interface. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{RecursiveCachingIterator\n|+ getChildren\l- $getChildren\l- $hasChildren\l- $ref\l|+ __construct()\l+ getChildren()\l+ hasChildren()\l+ next()\l+ rewind()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveCachingIterator.html",tooltip="Cached recursive iteration over another Iterator. "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{CachingRecursiveIterator\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCachingRecursiveIterator.html",tooltip="Compatibility to PHP 5.0. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{RecursiveDirectoryIterator\n|+ CURRENT_AS_FILEINFO\l+ CURRENT_AS_PATHNAME\l+ CURRENT_AS_SELF\l+ KEY_AS_FILENAME\l+ KEY_AS_PATHNAME\l+ NEW_CURRENT_AND_KEY\l|+ __construct()\l+ current()\l+ getChildren()\l+ getSubPath()\l+ getSubPathname()\l+ hasChildren()\l+ key()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveDirectoryIterator.html",tooltip="recursive directory iterator "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{RecursiveDualIterator\n|- $ref\l|+ __construct()\l+ areEqual()\l+ areIdentical()\l+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveDualIterator.html",tooltip="Synchronous iteration over two recursive iterators. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{RecursiveFilterIterator\n|- $ref\l|+ __construct()\l+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveFilterIterator.html",tooltip="Iterator to filter recursive iterators. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{DirectoryFilterDots\n||+ __construct()\l+ accept()\l+ key()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDirectoryFilterDots.html",tooltip="A filtered DirectoryIterator. "];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{NoCvsDirectory\n||+ __construct()\l+ accept()\l+ getChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNoCvsDirectory.html"];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{ParentIterator\n||+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParentIterator.html",tooltip="Iterator to filter parents. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{RecursiveRegexIterator\n|- $ref\l|+ __construct()\l+ getChildren()\l+ hasChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRecursiveRegexIterator.html",tooltip="Recursive regular expression filter for iterators. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{SimpleXMLIterator\n||+ count()\l+ current()\l+ getChildren()\l+ hasChildren()\l+ key()\l+ next()\l+ rewind()\l+ valid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSimpleXMLIterator.html",tooltip="recursive SimpleXML_Element iterator "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{SplFileObject\n|+ DROP_NEW_LINE\l- $delimiter\l- $enclosure\l- $flags\l- $fname\l- $fp\l- $line\l- $lnum\l- $max_len\l|+ __construct()\l+ __toString()\l+ current()\l+ eof()\l+ fflush()\l+ fgetc()\l+ fgetcsv()\l+ fgets()\l+ fgetss()\l+ flock()\land 21 more...\l- freeLine()\l- readLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSplFileObject.html",tooltip="Object representation for any stream. "];
}
